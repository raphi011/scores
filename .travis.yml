dist: xenial # newer mysql version

jobs:
  include:
    - stage: "Test"
      name: "backend"
      language: go
      go: "1.11"
      services:
        - postgresql
        - mysql
      before_install:
        - mysql -e 'CREATE DATABASE scores;'
      install:
        - cd backend
        - go mod download
      script:
        - cd backend
        - TEST_DB_PROVIDER=postgres TEST_DB_CONNECTION="postgres://postgres@localhost?sslmode=disable" go test ./... -race -cover
        - TEST_DB_PROVIDER=mysql TEST_DB_CONNECTION="root@tcp(localhost)/scores?charset=utf8mb4&parseTime=true&multiStatements=true" go test ./... -race -cover
        - go test ./... -race -cover # test sqlite3 (default provider)
      env:
        - GO111MODULE=on

    - name: "frontend"
      language: node_js
      node_js: node
      install: npm --prefix ./web-client install ./web-client
      script: npm --prefix ./web-client test

    - name: "lint-frontend"
      language: node_js
      node_js: node
      install: npm --prefix ./web-client install ./web-client
      script:
        - npm --prefix ./web-client run ci-lint
        - npm --prefix ./web-client run ci-build

    - name: "lint-backend"
      language: "go"
      go: "1.11"
      install: go get github.com/mgechev/revive
      script:
        - cd backend
        - revive -exclude volleynet/mocks -config ./revive.toml -formatter friendly ./...

    - stage: "Deploy"
      script: skip
      language: generic
      if: branch IN (master, development) and tag IS present
      before_deploy:
        - openssl aes-256-cbc -K $encrypted_531129a75a03_key -iv $encrypted_531129a75a03_iv -in secrets.tar.enc -out secrets.tar -d
        - mkdir $DOCKER_CERT_PATH
        - tar xvf secrets.tar -C $DOCKER_CERT_PATH
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      after_deploy:
        - rm -rf $DOCKER_CERT_PATH
      deploy:
        provider: script
        script: bash ./scripts/deploy.sh
        skip_cleanup: true # don't remove the cert/ folder
        on:
          all_branches: true
      env:
        - DOCKER_COMPOSE_VERSION=1.21.2
        - DOCKER_TLS_VERIFY=1
        - DOCKER_HOST=tcp://scores.network:2376
        - DOCKER_CERT_PATH=docker-certs
